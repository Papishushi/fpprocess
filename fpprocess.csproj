<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0-windows10.0.22000.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <AssemblyName>fpprocess</AssemblyName>
    <DebugType>none</DebugType>
    <SignAssembly>False</SignAssembly>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <NeutralLanguage>en-001</NeutralLanguage>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/Papishushi/fpprocess</RepositoryUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageProjectUrl>https://github.com/Papishushi/fpprocess</PackageProjectUrl>
    <Copyright>MIT License</Copyright>
    <Description>Terminal tool targeted for Windows, its purpose is to find the full list of parent processes based on supplied PIDs by stdin.</Description>
    <Authors>papishushi</Authors>
    <Product>fpprocess</Product>
    <PackageId>fpprocess</PackageId>
    <ErrorReport>none</ErrorReport>
    <RootNamespace>fpprocess</RootNamespace>
    <SupportedOSPlatformVersion>7.0</SupportedOSPlatformVersion>
    <ProduceReferenceAssembly>False</ProduceReferenceAssembly>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Diagnostics.PerformanceCounter" Version="6.0.1" />
  </ItemGroup>

  <ItemGroup>
    <None Update="README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <PropertyGroup>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <Version>1.1.0</Version>
    <PackageTags>windows ; cli; terminal; parent; elevated-rights; processmonitoring; dotnet6; processparent</PackageTags>
    <PackageReleaseNotes>* Better looking colors! * A lot of bug fixing, yeah! * Added support for process names, instead of PIDs. (You can mix inputs) * Added support for parameters. * Added new functionality for changing background color to WriteLineColor method. * Color output mode switch with --no-color parameter * Now you can run the script at an interval with -i parameter</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <None Include="LICENSE" Pack="true" PackagePath="" />
  </ItemGroup>

</Project>
